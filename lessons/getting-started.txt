

Getting started

Clone this repo and go into the lesson-1 folder in your terminal. The relevant
files for today are there.

From your terminal if you want to execute a javascript program you've written
you can use the following command:

node path_to_program.js

Note the path you give to the program is relative to what directory you are in.

Something you may not know is that you can actually pass arguments into your
javascript program from the command line as well. For example:

node path_to_program.js node is awesome

All arguments (in this case 'node', 'is', and 'awesome', separated by spaces)
will be passed into your program as strings and can be accessed inside it using
an object called process that is in-built with node.

process has a property called argv. It is an array. process.argv[0] is always
the path to node on your machine, and process.argv[1] is always the path to the
executed javascript file.

In this case process.argv will be:

process.argv // = [path_to_node, path_to_current_file, 'node', 'is', 'awesome'];

//so you can access the arguments you pass in like so:

process.argv[2] // = 'node';
process.argv[3] // = 'is';
process.argv[4] // = 'awesome';

This is useful as it means we can pass into our programs the names of, or paths
to, files, to be manipulated within the node program.

process has other useful methods. One in particular is process.stdout.write().
It is very similar to console.log() in that it will take what you input it and
output it to the terminal. It has subtle differences, try experimenting with
both in this exercise.

In this case if we use node path_to_file.js node is awesome to call path_to_file.js
and inside the program write:

process.stdout.write(process.argv[2] + process.argv[3] + process.argv[4]);

It will output node is awesome to the terminal.
